"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.normalizeServiceName = exports.normalizeToClassicComponent = exports.normalizeToNamedBlockName = exports.normalizeToAngleBracketComponent = void 0;
// @ts-expect-error esmodule
const kebabCase = require("lodash/kebabCase");
// https://github.com/ember-codemods/ember-angle-brackets-codemod/blob/master/transforms/angle-brackets/transform.js#L40
function normalizeToAngleBracketComponent(name) {
    const SIMPLE_DASHERIZE_REGEXP = /[a-z]|\/|-/g;
    const ALPHA = /[A-Za-z0-9]/;
    if (name.includes('.')) {
        return name;
    }
    return name.replace(SIMPLE_DASHERIZE_REGEXP, (char, index) => {
        if (char === '/') {
            return '::';
        }
        if (index === 0 || !ALPHA.test(name[index - 1])) {
            return char.toUpperCase();
        }
        // Remove all occurrences of '-'s from the name that aren't starting with `-`
        return char === '-' ? '' : char.toLowerCase();
    });
}
exports.normalizeToAngleBracketComponent = normalizeToAngleBracketComponent;
function normalizeToNamedBlockName(name) {
    const SIMPLE_DASHERIZE_REGEXP = /[a-z]|\/|-/g;
    const ALPHA = /[A-Za-z0-9]/;
    if (name.includes('.')) {
        return name;
    }
    return name.replace(SIMPLE_DASHERIZE_REGEXP, (char, index) => {
        if (index !== 0 && !ALPHA.test(name[index - 1])) {
            return char.toUpperCase();
        }
        // Remove all occurrences of '-'s from the name that aren't starting with `-`
        return char === '-' ? '' : char.toLowerCase();
    });
}
exports.normalizeToNamedBlockName = normalizeToNamedBlockName;
// https://github.com/rwjblue/ember-angle-bracket-invocation-polyfill/blob/master/lib/ast-transform.js#L33
function normalizeToClassicComponent(rawName) {
    const name = rawName.split('$').pop() || '';
    const ALPHA = /[A-Za-z]/;
    return name
        .replace(/[A-Z]/g, (char, index) => {
        if (index === 0 || !ALPHA.test(name[index - 1])) {
            return char.toLowerCase();
        }
        return `-${char.toLowerCase()}`;
    })
        .replace(/::/g, '/');
}
exports.normalizeToClassicComponent = normalizeToClassicComponent;
function normalizeServiceName(name) {
    return name
        .split('/')
        .map((el) => kebabCase(el))
        .join('/');
}
exports.normalizeServiceName = normalizeServiceName;
//# sourceMappingURL=normalizers.js.map
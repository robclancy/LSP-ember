import { MatchResultType } from './path-matcher';
import { TemplateYieldContext } from './yield-context-extractor';
export interface TemplateTokenMeta {
    source: string;
    tokens: string[];
    yieldScopes?: TemplateYieldContext;
}
export declare type ITemplateTokens = {
    component: {
        [key: string]: TemplateTokenMeta;
    };
    routePath: {
        [key: string]: TemplateTokenMeta;
    };
};
export declare type UsageType = 'component' | 'routePath';
export interface Usage {
    name: string;
    path: string;
    type: UsageType;
    usages: Usage[];
}
export declare function closestParentRoutePath(name: string): string | null;
export declare function findRelatedFiles(token: string, tokenType?: MatchResultType): Usage[];
export declare function waitForTokensToBeCollected(): Promise<void>;
export declare function getAllTemplateTokens(): ITemplateTokens;
export declare function updateTemplateTokens(kind: UsageType, normalizedName: string, file: string | null): void;

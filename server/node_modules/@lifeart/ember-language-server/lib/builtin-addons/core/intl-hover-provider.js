"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const glimmer_utils_1 = require("../../glimmer-utils");
const ast_helpers_1 = require("../../utils/ast-helpers");
const intl_utils_1 = require("./intl-utils");
class IntlHoverProvider {
    onInit(server) {
        this.server = server;
    }
    async onHover(root, params) {
        const { results, focusPath, type } = params;
        if ((0, ast_helpers_1.isLocalizationHelperTranslataionName)(focusPath, type)) {
            const node = focusPath.node;
            const key = node.value;
            const translations = await (0, intl_utils_1.getTranslations)(root, this.server);
            const location = (0, glimmer_utils_1.nodeLoc)(node);
            Object.keys(translations).forEach((tr) => {
                if (tr === key) {
                    const detail = translations[tr].map((t) => `${t.locale} : ${t.text}`).join('\n');
                    results.push({
                        contents: { kind: 'plaintext', value: detail },
                        range: {
                            start: { line: location.start.line - 1, character: location.start.column },
                            end: { line: location.end.line - 1, character: location.end.column },
                        },
                    });
                }
            });
        }
        return results;
    }
}
exports.default = IntlHoverProvider;
//# sourceMappingURL=intl-hover-provider.js.map
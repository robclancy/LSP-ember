import ASTPath from './../glimmer-utils';
export declare function closestScriptNodeParent(astPath: ASTPath, type: string, ignoreParents?: string[]): any;
export declare function isRouteLookup(astPath: ASTPath): boolean;
export declare function isTemplateElement(astPath: ASTPath): boolean;
export declare function isStoreModelLookup(astPath: ASTPath): boolean;
export declare function isComputedPropertyArgument(astPath: ASTPath): boolean;
export declare function isTransformReference(astPath: ASTPath): boolean;
export declare function isNamedBlockName(path: ASTPath): boolean;
export declare function isSpecialHelperStringPositionalParam(helperName: 'component' | 'helper' | 'modifier', astPath: ASTPath): boolean;
export declare function isScopedAngleTagName(path: ASTPath): boolean;
export declare function isAngleComponentPath(path: ASTPath): boolean;
export declare function isModifierPath(path: ASTPath): boolean;
export declare function isMustachePath(path: ASTPath): boolean;
export declare function isBlockPath(path: ASTPath): boolean;
export declare function isHashPair(path: ASTPath): boolean;
export declare function isHashPairValue(path: ASTPath): any;
export declare function isSubExpressionPath(path: ASTPath): boolean;
export declare function isLinkToTarget(path: ASTPath): boolean;
export declare function isOutlet(path: ASTPath): boolean;
export declare function isInlineLinkToTarget(path: ASTPath): boolean;
export declare function isBlockLinkToTarget(path: ASTPath): boolean;
export declare function isImportPathDeclaration(path: ASTPath): boolean;
export declare function isImportSpecifier(path: ASTPath): boolean;
export declare function isImportDefaultSpecifier(path: ASTPath): boolean;
export declare function isServiceInjection(path: ASTPath): boolean;
export declare function isNamedServiceInjection(path: ASTPath): boolean;
export declare function isModelReference(astPath: ASTPath): boolean;
export declare function isLocalizationHelperTranslataionName(focusPath: ASTPath, type: 'script' | 'template'): boolean;
export declare function isLocalPathExpression(path: any): boolean;
export declare function isArgumentPathExpression(path: any): boolean;
export declare function isScopedPathExpression(path: any): boolean;
export declare function isComponentArgumentName(path: any): boolean;
export declare function isElementAttribute(path: any): boolean;
export declare function isLinkComponentRouteTarget(path: any): boolean;
export declare function isPathExpression(node: any): boolean;
